from os.path import join

from rastervision2.pipeline.config import Config
from rastervision2.pipeline.config import register_config
from rastervision2.pipeline.pipeline import Pipeline


@register_config('pipeline')
class PipelineConfig(Config):
    """Base class for configuring Pipelines.
    
    This should be subclassed to configure new Pipelines. 

    Attributes:
        root_uri: the root URI for output generated by the pipeline
        rv_config: used to store serialized RVConfig so pipeline can 
            run in remote environment with the local RVConfig. This should
            not be set explicitly by users -- it is only used by the runner 
            when running a remote pipeline.
    """
    root_uri: str
    rv_config: dict = None

    def get_config_uri(self) -> str:
        """Get URI of serialized version of this PipelineConfig."""
        return join(self.root_uri, 'pipeline.json')

    def build(self, tmp_dir: str) -> Pipeline: 
        """Return a pipeline based on this configuration.

        Subclasses should override this to return an instance of the 
        corresponding subclass of Pipeline.

        Args:
            tmp_dir: root of any temporary directory to pass to pipeline
        """
        return Pipeline(self, tmp_dir)
